#!/usr/bin/env python
"""
WordAPI.py
Copyright 2014 Wordnik, Inc.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
"""
import sys
import os

from models import *


class FileApi(object):

    def __init__(self, apiClient):
      self.apiClient = apiClient

    

    def getFilesByProjectAccession(self, projectAccession, **kwargs):
        """list files for a project

        Args:
            projectAccession, str: a project accession number (example: PXD000001) (required)

            

        Returns: FileDetailList
        """

        allParams = ['projectAccession']

        params = locals()
        for (key, val) in params['kwargs'].iteritems():
            if key not in allParams:
                raise TypeError("Got an unexpected keyword argument '%s' to method getFilesByProjectAccession" % key)
            params[key] = val
        del params['kwargs']

        resourcePath = '/file/list/project/{projectAccession}'
        resourcePath = resourcePath.replace('{format}', 'json')
        method = 'GET'

        queryParams = {}
        headerParams = {}
        formParams = {}
        bodyParam = None

        if ('projectAccession' in params):
            replacement = str(self.apiClient.toPathValue(params['projectAccession']))
            resourcePath = resourcePath.replace('{' + 'projectAccession' + '}',
                                                replacement)
        if formParams:
            headerParams['Content-type'] = 'application/x-www-form-urlencoded'

        postData = (formParams if formParams else bodyParam)

        response = self.apiClient.callAPI(resourcePath, method, queryParams,
                                          postData, headerParams)

        if not response:
            return None

        responseObject = self.apiClient.deserialize(response, 'FileDetailList')
        return responseObject
        

        

    def countFilesByProjectAccession(self, projectAccession, **kwargs):
        """count files for a project

        Args:
            projectAccession, str: a project accession number (example: PXD000001) (required)

            

        Returns: int
        """

        allParams = ['projectAccession']

        params = locals()
        for (key, val) in params['kwargs'].iteritems():
            if key not in allParams:
                raise TypeError("Got an unexpected keyword argument '%s' to method countFilesByProjectAccession" % key)
            params[key] = val
        del params['kwargs']

        resourcePath = '/file/count/project/{projectAccession}'
        resourcePath = resourcePath.replace('{format}', 'json')
        method = 'GET'

        queryParams = {}
        headerParams = {}
        formParams = {}
        bodyParam = None

        if ('projectAccession' in params):
            replacement = str(self.apiClient.toPathValue(params['projectAccession']))
            resourcePath = resourcePath.replace('{' + 'projectAccession' + '}',
                                                replacement)
        if formParams:
            headerParams['Content-type'] = 'application/x-www-form-urlencoded'

        postData = (formParams if formParams else bodyParam)

        response = self.apiClient.callAPI(resourcePath, method, queryParams,
                                          postData, headerParams)

        if not response:
            return None

        responseObject = self.apiClient.deserialize(response, 'int')
        return responseObject
        

        

    def getFilesByAssayAccession(self, assayAccession, **kwargs):
        """list files for an assay

        Args:
            assayAccession, str: an assay accession number (example: 22134) (required)

            

        Returns: FileDetailList
        """

        allParams = ['assayAccession']

        params = locals()
        for (key, val) in params['kwargs'].iteritems():
            if key not in allParams:
                raise TypeError("Got an unexpected keyword argument '%s' to method getFilesByAssayAccession" % key)
            params[key] = val
        del params['kwargs']

        resourcePath = '/file/list/assay/{assayAccession}'
        resourcePath = resourcePath.replace('{format}', 'json')
        method = 'GET'

        queryParams = {}
        headerParams = {}
        formParams = {}
        bodyParam = None

        if ('assayAccession' in params):
            replacement = str(self.apiClient.toPathValue(params['assayAccession']))
            resourcePath = resourcePath.replace('{' + 'assayAccession' + '}',
                                                replacement)
        if formParams:
            headerParams['Content-type'] = 'application/x-www-form-urlencoded'

        postData = (formParams if formParams else bodyParam)

        response = self.apiClient.callAPI(resourcePath, method, queryParams,
                                          postData, headerParams)

        if not response:
            return None

        responseObject = self.apiClient.deserialize(response, 'FileDetailList')
        return responseObject
        

        

    def countFilesByAssayAccession(self, assayAccession, **kwargs):
        """count files for an assay

        Args:
            assayAccession, str: an assay accession number (example: 22134) (required)

            

        Returns: int
        """

        allParams = ['assayAccession']

        params = locals()
        for (key, val) in params['kwargs'].iteritems():
            if key not in allParams:
                raise TypeError("Got an unexpected keyword argument '%s' to method countFilesByAssayAccession" % key)
            params[key] = val
        del params['kwargs']

        resourcePath = '/file/count/assay/{assayAccession}'
        resourcePath = resourcePath.replace('{format}', 'json')
        method = 'GET'

        queryParams = {}
        headerParams = {}
        formParams = {}
        bodyParam = None

        if ('assayAccession' in params):
            replacement = str(self.apiClient.toPathValue(params['assayAccession']))
            resourcePath = resourcePath.replace('{' + 'assayAccession' + '}',
                                                replacement)
        if formParams:
            headerParams['Content-type'] = 'application/x-www-form-urlencoded'

        postData = (formParams if formParams else bodyParam)

        response = self.apiClient.callAPI(resourcePath, method, queryParams,
                                          postData, headerParams)

        if not response:
            return None

        responseObject = self.apiClient.deserialize(response, 'int')
        return responseObject
        

        

    




